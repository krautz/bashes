# Media Ocean Bash

# ---------------------------------------------------------------------- #
# --------------------------- VARIABLES -------------------------------- #
# ---------------------------------------------------------------------- #

# Project path
MEDIAOCEAN_PATH='/home/ckrauthamer/mediaocean/voxsupFrontend2/services'

# Default virtual env name
DEFAULT_VIRTUAL_ENV='env'

# ---------------------------------------------------------------------- #
# ------------------------------ ALIAS --------------------------------- #
# ---------------------------------------------------------------------- #

alias connectdeploy='sshuttle -r ckrauthamer@build.4cinsights.com 172.16.0.0/16'
alias entermysql='mysql -u root -ppass'
alias enterpsql='psql -Upostgres'
alias gclm='gitconfiglocalmediaocean'
alias installprecommit='pre-commit install --overwrite'
alias lint='pre-commit'
alias startctv='bash debug run'
alias startvf2='tools/debug'
alias sm='gf main && gb -D nbcu-master || : && gco -t main/nbcu-master && gco -'

# ---------------------------------------------------------------------- #
# ---------------------------- FUNCTIONS-------------------------------- #
# ---------------------------------------------------------------------- #


# Activate virtual env on current dir
# USAGE
#   1 - activate [environemnt name (default: env)]
activate()
{
    # no env name provided: using default env
    if [ -z $1 ]
    then
        source $DEFAULT_VIRTUAL_ENV/bin/activate
    else
        source $1/bin/activate
    fi
}


# Set git config local with mediaocean credentials
# USAGE:
#   1 - gitconfiglocalmediaocean
gitconfiglocalmediaocean()
{
    # add local git configurations
    git config --local user.email ckrauthamer@mediaocean.com
    git config --local user.name "Caio Krauthamer"
    git config --local core.editor vim
}


# Install dependencies
# USAGE
#   1 - installdeps <"upgrade" to upgrade pandas> [pip requirements file (default: requirements.txt)]
installdeps()
{
    # install node dependencies
    npm ci

    # no env name provided: using default env
    if [ -z $2 ]
    then
        pip install -r requirements.txt
    else
        pip install -r $2
    fi

    # upgrade numpy and pandas
    if [ $1 == "upgrade" ]
    then
        pip install numpy pandas --upgrade
    fi

    # run python stuff
    python -m nltk.downloader punkt stopwords
}

# ---------------------------------------------------------------------- #
# ------------------------------ HELP ---------------------------------- #
# ---------------------------------------------------------------------- #

# Print all available commands and how to use it
# USAGE: bashmediaoceanhelp
bashmediaoceanhelp() {
    printf "==========================MEDIA OCEAN COMMANDS==========================\n\n\n"

    printf "==========Activate virtual environment==========\n"
    printf "     activate [env name (default: 'env')\n\n"

    printf "==========Connect to deploy server==========\n"
    printf "     connectdeploy\n\n"

    printf "==========Enter mysql==========\n"
    printf "     entermysql\n\n"

    printf "==========Enter postgres==========\n"
    printf "     enterpsql\n\n"

    printf "==========Config Git Locally==========\n"
    printf "     gitconfiglocalmediaocean(gclm)\n\n"

    printf "==========Install project dependencies==========\n"
    printf "     installdeps <\"upgrade\" or \"no\"> [requirements file (default: 'requirements.txt')\n\n"

    printf "==========Install pre commit==========\n"
    printf "     installprecommit\n\n"

    printf "==========Run Linter==========\n"
    printf "     lint\n\n"

    printf "==========Start ctv development server==========\n"
    printf "     startctv\n\n"

    printf "==========Start vf2 development server==========\n"
    printf "     startvf2\n\n"

    printf "==========Get latest master branch==========\n"
    printf "     sm\n\n"
}
