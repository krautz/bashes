# Git Bash

# ---------------------------------------------------------------------- #
# ------------------------------ ALIAS --------------------------------- #
# ---------------------------------------------------------------------- #

alias ga='git add'
alias gb='git branch'
alias gc='git commit -m'
alias gca='git commit --amend'
alias gco='git checkout'
alias gcp='git cherry-pick'
alias gd='git diff'
alias gl='git log'
alias gpl='git pull'
alias gps='git push -u -f origin'
alias gf='git fetch'
alias gr='git rebase -i'
alias grc='git rebase --continue'
alias gs='git status'
alias gsth='git stash push -m'
alias gsthp='git stash pop'
alias gsthl='git stash list'
alias sb='syncbranch'

# ---------------------------------------------------------------------- #
# ---------------------------- FUNCTIONS-------------------------------- #
# ---------------------------------------------------------------------- #


# Get the most recent branch from the main repo
# USAGE
#   1 - syncbranch [branch name (default is master)]
syncbranch()
{
    # no branch name provided: use master branch
    if [ -z $1 ]
    then
        target_branch='master'

    # branch name provided: use it
    else
        target_branch=$1
    fi

    # store current branch name
    current_branch=$(gb | sed -n -e 's/^\* \(.*\)/\1/p')

    # sync branch
    gco -b tmp
    gb -D $target_branch || :
    gf main
    gco -t main/$target_branch || :
    gco $current_branch
    gb -D tmp
}


# ---------------------------------------------------------------------- #
# ------------------------------ HELP ---------------------------------- #
# ---------------------------------------------------------------------- #

# Print all available commands and how to use it
# USAGE: bashgithelp
bashgithelp() {
    printf "==========================GIT BASH COMMANDS==========================\n\n\n"

    printf "==========Git Add (git add)==========\n"
    printf "     ga\n\n"

    printf "==========Show local branches (git branch)==========\n"
    printf "     gb\n\n"

    printf "==========Git Commit (git commit -m)==========\n"
    printf "     gc\n\n"

    printf "==========Git Commit Amend (add all the edition in the first commit)(git commit --amend)==========\n"
    printf "     gca\n\n"

    printf "==========Git Checkout (git checkout)==========\n"
    printf "     gco\n\n"

    printf "==========Git Cherry Pick (git cherry-pick)==========\n"
    printf "     gcp\n\n"

    printf "==========Git Diff (git diff)==========\n"
    printf "     gd\n"

    printf "==========Fetch from remote (git fetch)==========\n"
    printf "     gf\n\n"
 
    printf "==========Log commits (git log)==========\n"
    printf "     gl\n\n"
 
    printf "==========Pull from remote (git pull)==========\n"
    printf "     gpl <remote name> <branch name>\n\n"

    printf "==========Push to remote (forcedly) (git push -u -f origin)==========\n"
    printf "     gps <branch name>\n\n"

    printf "==========Git Rebase (git rebase -i)==========\n"
    printf "     gr\n\n"

    printf "==========Git Rebase Continue (git rebase --continue)==========\n"
    printf "     grc\n\n"

    printf "==========Git Status (git status)==========\n"
    printf "     gs\n\n"

    printf "==========Git Stash (git stash push -m)==========\n"
    printf "     gsth <stash message>\n\n"

    printf "==========Git Stash List(git stash list)==========\n"
    printf "     gsthl\n\n"

    printf "==========Pop from stash (git stash pop)==========\n"
    printf "     gsthp [stash index]\n\n"

    printf "==========Syncrhonize with desired branch from main repo==========\n"
    printf "     sb [<branch name> (default: master)]\n\n"

}

